apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    def versionMajor = rootProject.ext.versionMajor
    def versionMinor = rootProject.ext.versionMinor
    def versionPatch = rootProject.ext.versionPatch

    dexOptions {
        maxProcessCount 2
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        applicationId "com.devabit.takestock"

        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        archivesBaseName = "takestock-$versionName"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            buildConfigField("String", "API_URL", '"http://dev.takestock.com/api/v1/"')
            buildConfigField("String", "STRIPE_API_KEY", '"pk_test_vqadhDOynhijTjKgj7sEnybl"')
            buildConfigField("boolean", "LOGGING_ENABLED", "false")
            shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField("String", "API_URL", '"http://uat.takestock.com/api/v1"')
            buildConfigField("String", "STRIPE_API_KEY", '"pk_test_vqadhDOynhijTjKgj7sEnybl"')
            buildConfigField("boolean", "LOGGING_ENABLED", "true")
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            // Run code coverage reports by default on debug builds.
            // testCoverageEnabled = true
        }
    }

    productFlavors {
        dev {
            minSdkVersion 21
        }
        mock {
            minSdkVersion 21
            applicationIdSuffix = ".mock"
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion rootProject.ext.minSdkVersion
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {

    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"

    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.google.code.gson:gson:2.7'

    // RxJava dependencies
    compile 'io.reactivex:rxjava:1.1.9'
    compile 'io.reactivex:rxandroid:1.2.1'

    // ButterKnife dependencies
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    apt "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    // Timber dependency
    compile 'com.jakewharton.timber:timber:4.3.0'

    // Glide dependencies
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    // Stripe dependencies
    compile "com.stripe:stripe-android:$rootProject.stripeVersion"

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
}
